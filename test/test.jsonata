{
  "hello": function() {
    (
      "hello" & " " & "world";
      %.%.a.def;
      [
        Address,
        Other.Alternative.Address
      ].City;
      Product.(Price * Quantity);
      Account.Order.Product {
  `Product Name`: {"Price": Price, "Qty": Quantity}
      };
      $sum(Account.Order.Product.(Price*Quantity));
        /* JSONata is not known for its graphics support! */
  $plot := function($x) {(
    $floor := $string ~> $substringBefore(?, '.') ~> $number;
    $index := $floor(($x + 1) * 20 + 0.5);
    $join([0..$index].('.')) & 'O' & $join([$index..40].('.'))
  )};
      $cos := function($x){ /* Derive cosine by expanding Maclaurin series */
          $x > $pi ? $cos($x - 2 * $pi) : $x < -$pi ? $cos($x + 2 * $pi) :
            $sum([0..12].($power(-1, $) * $power($x, 2*$) / $factorial(2*$)))
        };
        $twice := function($f) { function($x){ $f($f($x)) } };
        Account.(
        $AccName := function() { $.'Account Name' };

        Order[OrderID = 'order104'].Product.{
          'Account': $AccName(),
          'SKU-' & $string(ProductID): $.'Product Name'
        }
      );
      $matcher := /[a-z]*an[a-z]*/i;
      library.loans@$l.books@$b[$l.isbn=$b.isbn].{
        'title': $b.title,
        'customer': $l.customer
      };
      [1..$count(Items)].("Item " & $);
      "world" in ["hello", "world"];
      library.books[price < 10 or section="diy"].title;
      Customer.Email ~> $substringAfter("@") ~> $substringBefore(".") ~> $uppercase();
    )
  }
}